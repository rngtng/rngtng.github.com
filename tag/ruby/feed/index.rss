<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Ruby, Rails &amp; Co. &#8211; uRaNGaTaNG</title>
	<atom:link href="http://www.rngtng.com/tag/ruby/feed/" rel="self" type="application/rss+xml" />
	<link>http://www.rngtng.com</link>
	<description>Featuring Web development, Hardware Hacking, Pinball and more...</description>
	<lastBuildDate>Mon, 09 Jan 2012 17:59:07 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.2.2</generator>
	<item>
		<title>Rails 3.1 Hackfest &#8211; get rid of Javascript Runtime dependency in production</title>
		<link>http://www.rngtng.com/2011/07/25/rails-3-1-hackfest-get-rid-of-javascript-runtime-dependency-in-production/</link>
				<pubDate>Sun, 24 Jul 2011 22:42:54 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[hackfest]]></category>
		<category><![CDATA[rails]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=584</guid>
				<description><![CDATA[This weekend was Rails 3.1 Hackfest. The rails community was called to test the upcoming version 3.1 to its limits, to find bugs and or flaws and get it polished for the final release. So I did: I&#8217;m working with the rails 3.1 since it first release candidate, but never tried in production. So I [&#8230;]]]></description>
								<content:encoded><![CDATA[<p style="text-align: center"><img class="aligncenter" src="http://pragdave.pragprog.com/photos/uncategorized/2007/05/20/rails_logo_heart.png" alt="" width="480" height="306" /></p>
<p>This weekend was <a href="http://weblog.rubyonrails.org/2011/7/14/rails-3-1-hackfest">Rails 3.1 Hackfest</a>. The rails community was called to test the upcoming version 3.1 to its limits, to find bugs and or flaws and get it polished for the final release. So I did:</p>
<p>I&#8217;m working with the rails 3.1 since it first release candidate, but never tried in production. So I made my task to finally test this, and bring my app in the wild &#8211; on my (not root) server. Rails 3.0 is running there smoothly so I didn&#8217;t expect any problems &#8211; wrong!<br />
Show stopper was the Javascript Runtime dependency on production. Reason was quickly found: <a href="http://jashkenas.github.com/coffee-script/" class="broken_link">Coffee-Script</a> &#8211; ahrg! It depends on <a href="https://github.com/sstephenson/execjs">ExecJS</a>, which depends on a Javascript Runtime. Unfortunately, and that&#8217;s because I&#8217;m not on a root server, I got neither node.js, therubyraser, Mustang nor Johnson installed there.</p>
<p>I read <a href="https://moocode.com/posts/1-deploying-a-rails-3-1-application-to-production" class="broken_link">this article</a>, which supposed to precompile the assets &#8211; didn&#8217;t help either and runtime is needed again.</p>
<p>In the End, the solution was as simple as obvious: just don&#8217;t use coffee-script in production <img src="https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /> I did, removed the coffee-script gem form my Gemfile &#8211; and tatatata: it works! Uhh! This took me quite a long time to get it right. Javascript Runtime dependecy no good for prodcution, and reading <a href="http://yehudakatz.com/2011/06/14/what-the-hell-is-happening-to-rails/">Mr. Katz</a> it&#8217;s looking good to get this fixed for the final release &#8211; uff! Happy so get tin final one soon! Yeah!</p>
<p>[cheesey image taken from <a href="http://pragdave.pragprog.com/pragdave/2007/05/rails_is_love.html" class="broken_link">PragDave</a> &#8211; thx]</p>
]]></content:encoded>
										</item>
		<item>
		<title>HowTo: ultra mega fast rails routes lookup</title>
		<link>http://www.rngtng.com/2011/03/16/howto-ultra-mega-fast-rails-routes-lookup/</link>
				<pubDate>Wed, 16 Mar 2011 16:34:00 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[alias]]></category>
		<category><![CDATA[bash]]></category>
		<category><![CDATA[caching]]></category>
		<category><![CDATA[howto]]></category>
		<category><![CDATA[rails]]></category>
		<category><![CDATA[routes]]></category>
		<category><![CDATA[ruby on rails]]></category>
		<category><![CDATA[script]]></category>
		<category><![CDATA[shell]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=538</guid>
				<description><![CDATA[I was quite annoyed by the wasted time it took each time I grep the rails routes table. Wait, can&#8217;t this be cached? &#8211; Sure it can! So I came up this nice little alias to cache the output once: alias route='CF=tmp/routes_cache; [[ ! -s $CF ]] &#38;&#38; rake routes &#62; $CF; cat $CF &#124; [&#8230;]]]></description>
								<content:encoded><![CDATA[<p><img class="aligncenter" src="http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2009/8/5/1249508265579/Frances-V150-TGV-fast-tra-001.jpg" alt="" /></p>
<p>I was quite annoyed by the wasted time it took each time I grep the rails routes table.<br />
<em>Wait, can&#8217;t this be cached?  &#8211; Sure it can!</em><br />
So I came up this nice little alias to cache the output once:<br />
<code><br />
alias route='CF=tmp/routes_cache; [[ ! -s $CF ]] &amp;&amp; rake routes &gt; $CF; cat $CF | grep '<br />
</code></p>
<p>now it&#8217;s ultra fast, try e.g.:<br />
<code><br />
$ route root<br />
</code><br />
bang!</p>
]]></content:encoded>
										</item>
		<item>
		<title>HowTo: parse invalid, irregular HTML having &#060; or unlcosed tags</title>
		<link>http://www.rngtng.com/2011/02/03/pars-invalid-irregular-html-with-unclosed-tag/</link>
				<pubDate>Thu, 03 Feb 2011 11:24:48 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Happy Hacking]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[invlaid]]></category>
		<category><![CDATA[irregular]]></category>
		<category><![CDATA[nokogiri]]></category>
		<category><![CDATA[parsing]]></category>
		<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[tag]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=529</guid>
				<description><![CDATA[I had the &#8216;problem&#8217; that user feedback included lot of love &#8211; mostly by writing &#8216;hearts&#8217;. Unfortunately expressing hearts is done by &#8216;&#60;3&#039; which turns the input into invalid HTML. Bummer. So if you still want allow other basic tags, you have a problem. Here&#039;s how I solved it: First I checked Stackoverflow &#8211; Tian [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>I had the &#8216;problem&#8217; that user feedback included lot of love &#8211; mostly by writing &#8216;hearts&#8217;. Unfortunately expressing hearts is done by &#8216;&lt;3&#039; which turns the input into invalid HTML. Bummer. So if you still want allow other basic tags, you have a problem. Here&#039;s how I solved it:</p>
<p>First I checked Stackoverflow &#8211; <strong>Tian</strong> had similar problem over there: <a href="http://stackoverflow.com/questions/3268387/nokogiri-parsing-irregular">Nokogiri: Parsing Irregular Â“&lt;Â”</a></p>
<p>As a quick fix I came up with this method using a reqular expression to identify unclosed tags:</p>
<p>[code]<br />
def fix_irregular_html(html)<br />
  regexp = /&lt;([^&lt;&gt;]*)(&lt;|$)/</p>
<p>  #we need to do this multiple time as regex are overlapping<br />
  while (fixed_html = html.gsub(regexp, &quot;&amp;lt;\\1\\2&quot;)) &amp;&amp; fixed_html != html<br />
    html = fixed_html<br />
  end</p>
<p>  fixed_html<br />
end<br />
[/code]</p>
<p>See full code including test here: https://gist.github.com/796571</p>
<p>It works out well for me, I appreciate any feedback and improvements</p>
<p>See full code and test here:<br />
https://gist.github.com/796571</p>
]]></content:encoded>
										</item>
		<item>
		<title>Oauth-CLI &#8211; test your Twitter and other OAuth APIs easily</title>
		<link>http://www.rngtng.com/2010/07/01/oauth-cli-test-your-twitter-and-other-oauth-apis-easily/</link>
				<pubDate>Thu, 01 Jul 2010 11:36:10 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[cli]]></category>
		<category><![CDATA[command line]]></category>
		<category><![CDATA[gem]]></category>
		<category><![CDATA[oauth]]></category>
		<category><![CDATA[oauthc]]></category>
		<category><![CDATA[qype]]></category>
		<category><![CDATA[twitter]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=418</guid>
				<description><![CDATA[By the time I was working at Qype, I often had to deal with OAuth APIs. Doing example request works to a certain point quite good with a Plugin the for Firefox. But when it comes to Authorized or POST Request you&#8217;re stuck! So I developed a tiny command line client, which allows you to [&#8230;]]]></description>
								<content:encoded><![CDATA[<p><img src="http://www.rngtng.com/files/2010/07/oauthc.gif" alt="" width="600" height="432" class="aligncenter size-full wp-image-422" srcset="http://www.rngtng.com/files/2010/07/oauthc.gif 600w, http://www.rngtng.com/files/2010/07/oauthc-300x216.gif 300w" sizes="(max-width: 600px) 100vw, 600px" /><br />
By the time I was working at Qype, I often had to deal with OAuth APIs. Doing example request works to a certain point quite good with a Plugin the for Firefox. But when it comes to Authorized or POST Request you&#8217;re stuck!</p>
<p>So I developed a tiny command line client, which allows you to send request easily. It comes as a gem and easily to install:</p>
<p><code>gem install oauth-cli</code></p>
<p>After installation, execute <strong>oauthc</strong>. You either make onetime calls, with giving all required data as parameter, or just go into interactive mode, to get a shell for multiple calls and history. For not stating all connection data over and over again, it comes with multiple profile support, a wizard to create those easily and presets for <strong>Twitter and Qype</strong>.</p>
<p>See this nifty example call:<br />
<code>oauthc -p twitter get statuses/friends.json</code></p>
<p>I hope you like it &#8211; Bug reports, suggestions, updates go to:<br />
http://github.com/rngtng/oauth-cli/issues</p>
<p>See Readme:<br />
http://github.com/rngtng/oauth-cli/blob/master/README.rdoc</p>
<p>See Source:<br />
http://github.com/rngtng/oauth-cli</p>
]]></content:encoded>
										</item>
		<item>
		<title>My Snow Leopard (Development) System: Ruby, Rails, Arduino &#038; Co.</title>
		<link>http://www.rngtng.com/2010/04/27/my-snow-leopard-development-system-ruby-rails-arduino-co/</link>
				<pubDate>Tue, 27 Apr 2010 08:52:03 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Happy Hacking]]></category>
		<category><![CDATA[Arduino]]></category>
		<category><![CDATA[development]]></category>
		<category><![CDATA[lion]]></category>
		<category><![CDATA[Mac OS X]]></category>
		<category><![CDATA[rails]]></category>
		<category><![CDATA[Rails & Co.]]></category>
		<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[setup]]></category>
		<category><![CDATA[snowleopard]]></category>
		<category><![CDATA[system]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=313</guid>
				<description><![CDATA[&#8211; updated to Lion &#8211; Here&#8217;s a (maybe incomplete) list of my Mac OS X Development system setup. Mainly for me to remember, but maybe a help for you too: Main Development Setup Snow Leopard Lion xCode (or latest iPhone SDK) Mac Ports, now I prefer Homebrew Ruby: rvm + rubygems + rails etc. Database: [&#8230;]]]></description>
								<content:encoded><![CDATA[<p><em>&#8211; updated to Lion &#8211; </em></p>
<p style="text-align: center"><img src="http://www.rngtng.com/files/2010/04/mac_os_x.jpg" alt="" width="500" height="181" class="aligncenter size-full wp-image-497" srcset="http://www.rngtng.com/files/2010/04/mac_os_x.jpg 500w, http://www.rngtng.com/files/2010/04/mac_os_x-300x108.jpg 300w" sizes="(max-width: 500px) 100vw, 500px" /></p>
<p>Here&#8217;s a (maybe incomplete) list of my Mac OS X Development system setup. Mainly for me to remember, but maybe a help for you too:</p>
<p><strong>Main Development Setup</strong><br />
<del datetime="2012-01-09T17:56:37+00:00">Snow Leopard</del> Lion<br />
xCode (or latest iPhone SDK)<br />
Mac Ports, now I prefer <a href="http://mxcl.github.com/homebrew/">Homebrew</a><br />
Ruby: rvm + rubygems + rails etc.<br />
Database: Mysql 5.1 + <a href="http://www.sequelpro.com/">Sequel Pro</a><br />
OpenVPN: Tunnelblick, or  Cisco VPN client + Shimo VPN Menubar Addon<br />
<del datetime="2012-01-09T17:51:01+00:00">Terminal Console Extension: <a href="http://www.culater.net/software/SIMBL/SIMBL.php">SIMBL</a> + <a href="http://visor.binaryage.com/">Visor</a></del> <a href="http://www.iterm2.com/">iTerm 2</a><br />
<a href="http://macromates.com/">TextMate</a> + <a href="http://github.com/jezdez/textmate-missingdrawer">Missing Drawer</a> + Get Bundles + Rails + <a href="http://github.com/protocool/AckMate">AckMate</a> &#8230;<br />
<a href="http://www.jedit.org/">jEdit</a> + FTP + &#8230;<br />
Git + <a href="http://brotherbard.com/blog/2010/09/gitx-update/">GitX (Experimental)</a><br />
FTP &amp; Co: Cyberduck<br />
Hudson status: <a href="http://ccmenu.sourceforge.net/">CCMenu</a><br />
Share Files: <a href="http://www.dropbox.com/referrals/NTEzNjgzMzk">Dropbox</a><br />
<a href="http://www.google.com/chrome">Google Chrome</a><br />
Safari<br />
<a href="http://www.mozilla-europe.org/en/firefox/" class="broken_link">Firefox</a> + Firebug</p>
<p><strong>Extended Development</strong><br />
Arduino<br />
Processing<br />
Fritzing<br />
Eclipse</p>
<p><strong>Nice to have:</strong><br />
System Notification: <a href="http://growl.info/">Growl</a> + Growl Mail<br />
<del datetime="2012-01-09T17:51:01+00:00">Read RSS: NetNewsWire</del> Now using RSS within Apple Mail<br />
<del datetime="2012-01-09T17:51:01+00:00">IRC Client: <a href="http://colloquy.info/">Colloquy</a> and <a href="http://clintecker.com/disable-irc-msgs.html" class="broken_link">hide join messages</a></del> <a href="http://adium.im/">Adium</a><br />
<a href="http://www.skype.com/">Skype</a> and <del datetime="2012-01-09T17:51:01+00:00"><a href="http://www.atebits.com/tweetie-mac/">Tweetie</a></del> original Twitter client<br />
<del datetime="2012-01-09T17:51:01+00:00">Control iTunes: <a href="http://yellowmug.com/sk4it/">SizzlingKeys</a></del> <a href="http://bowtieapp.com/">Bowtie</a><br />
Spotify and <a href="http://lifeupnorth.co.uk/lun/#5" class="broken_link">Spotify Menubar</a> and <a href="http://pansentient.com/2009/05/apple-mac-and-iphone-apps-for-spotify/">more goddies</a><br />
Last.fm: iScrobbler<br />
All Codecs: <a href="http://www.perian.org/">Perian</a><br />
Dasboard widgets:  <a href="http://www.apple.com/downloads/dashboard/networking_security/ipwidget.html" class="broken_link">IP</a> + App Update<br />
Copy&amp;Paste History: Flycut<br />
Track Work: MacTimeLog<br />
Word replacement: iWork<br />
Keep your Notes: Journler<br />
Extend Finder: TotalFinder<br />
Mail <a href="http://stl.techinno.nl/archive/">Archiver</a> and <a href="http://www.hawkwings.net/plugins.htm">other</a> <a href="http://tikouka.net/mailapp/">MailPlugins</a></p>
<p><strong>Install hints</strong><br />
<strong>mac ports</strong><br />
<code>sudo port selfupdate<br />
sudo port install git-core +svn +bash_completion<br />
sudo port install ImageMagick +no_x11<br />
sudo port install wget</code></p>
<p><strong>ruby gems</strong><br />
http://stackoverflow.com/questions/991708/rails-mysql-and-snow-leopard<br />
<code>sudo gem self update<br />
sudo env ARCHFLAGS="-arch x86_64" gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config<br />
sudo gem install rails<br />
sudo gem install passenger<br />
sudo gem install piston</code></p>
<p><strong>Safari open always in tabs:</strong><br />
http://www.456bereastreet.com/archive/200812/make_safari_open_targeted_links_in_new_tabs_instead_of_new_windows/<br />
<code>defaults write com.apple.Safari TargetedClicksCreateTabs -bool true </code></p>
<p><strong>Safari enable Development mode:</strong><br />
<code>defaults write com.apple.Safari WebKitDeveloperExtras -bool true<br />
defaults write com.apple.Safari IncludeDebugMenu 1</code></p>
<p><strong>Safari Plugins:</strong><br />
http://alexstaubo.github.com/keywurl/</p>
<p><strong>TextMate install bundle</strong><br />
<code>cd ~/Desktop &amp;&amp; svn co http://svn.textmate.org/trunk/Review/Bundles/GetBundles.tmbundle/</code></p>
<p>Well, that&#8217;s it! Stay tuned for updated&#8230;</p>
]]></content:encoded>
										</item>
		<item>
		<title>If your ruby serial port doesn&#8217;t read what&#8217; you&#8217;re sending&#8230;</title>
		<link>http://www.rngtng.com/2009/11/27/if-your-ruby-serial-port-doesnt-read-what-youre-sending/</link>
				<pubDate>Fri, 27 Nov 2009 16:57:29 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[communication]]></category>
		<category><![CDATA[gem]]></category>
		<category><![CDATA[launchpad]]></category>
		<category><![CDATA[port]]></category>
		<category><![CDATA[Rails & Co.]]></category>
		<category><![CDATA[serial]]></category>
		<category><![CDATA[serialport]]></category>
		<category><![CDATA[uart]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=334</guid>
				<description><![CDATA[Some days ago I got my Novation launchpad an immediately started hacking with some Ruby and Arduino flavor. I wanted to port ccb23 Raindrops Project to launchpad. For that, I needed Serial communication within ruby. Thanks to ruby-serialport first steps went quite well. I could write OR read from and to Arduino easily. But for [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>Some days ago I got my <a href="http://twitter.com/rngtng/status/5792203896">Novation</a> <a href="http://www.novationmusic.com/launchpad/" class="broken_link">launchpad</a> an immediately started hacking with some <a href="http://github.com/thomasjachmann/launchpad">Ruby</a> and Arduino flavor. I wanted to port ccb23 <a href="http://vimeo.com/6916458">Raindrops Project</a> to launchpad. </p>
<p>For that, I needed Serial communication within ruby. Thanks to <a href="http://ruby-serialport.rubyforge.org/" class="broken_link">ruby-serialport</a> first steps went quite well. I could write OR read from and to Arduino easily. But for some reasons, writing AND reading using the same instance didn&#8217;t work out. </p>
<p>I used a simple &#8216;send-input-back&#8217; sketch on the Arduino side. So every byte I&#8217;m sending is returned back. I checked with the Arduino IDE Serialmonitor and a simple Processing script &#8211; everything worked alright.  But using ruby it was different. Writing to serial port worked okay, but reading from it was just random. Sometimes I read the response, sometime I didn&#8217;t &#8211; really, really weird. Some headaches and a lot of time testing I finally found the solution: just open two instances of the serial port. One for sending, one for reading &#8211; and, surprise, surprise &#8211; it works perfect! Who would have guessed that!? Strange.. </p>
<p>[ruby]<br />
// To be completed<br />
require &#8216;serialport&#8217;<br />
port_write = Serialport.new()<br />
port_read = Serialport.new()<br />
[/ruby]</p>
<p>Ok, continuing hacking, more soon&#8230;</p>
]]></content:encoded>
										</item>
		<item>
		<title>Ruby: a nice way to get name of current method you&#8217;re in:</title>
		<link>http://www.rngtng.com/2009/11/16/ruby-a-nice-way-to-get-name-of-current-method-youre-in/</link>
				<pubDate>Mon, 16 Nov 2009 16:39:52 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[method]]></category>
		<category><![CDATA[Rails & Co.]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=318</guid>
				<description><![CDATA[This is a nice extension to get the name of the method you&#8217;re currently in (Ruby &#60; 1.9) [ruby] module Kernel private def this_method caller[0] =~ /`([^&#8217;]*)&#8217;/ and $1 end end [/ruby] for Ruby &#62;= 1.9 you can uses this: [ruby] module Kernel private def this_method __method__ end end [/ruby] [see Stack Over Flow as [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>This is a nice extension to get the name of the method you&#8217;re currently in (Ruby &lt; 1.9)</p>
<p>[ruby]<br />
module Kernel<br />
   private<br />
   def this_method<br />
     caller[0] =~ /`([^&#8217;]*)&#8217;/ and $1<br />
   end<br />
end<br />
[/ruby]</p>
<p>for Ruby &gt;= 1.9 you can uses this:</p>
<p>[ruby]<br />
module Kernel<br />
   private<br />
   def this_method<br />
     __method__<br />
   end<br />
end<br />
[/ruby]</p>
<p>[see <a href="http://stackoverflow.com/questions/199527/get-the-name-of-the-currently-executing-method-in-ruby">Stack Over Flow</a> as well]</p>
]]></content:encoded>
										</item>
		<item>
		<title>Lot&#8217;s of Ruby and Rails Tricks</title>
		<link>http://www.rngtng.com/2009/11/12/lots-of-ruby-and-rails-tricks/</link>
				<pubDate>Thu, 12 Nov 2009 10:35:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
				<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[get started]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[link tip]]></category>
		<category><![CDATA[rails]]></category>
		<category><![CDATA[Rails & Co.]]></category>

		<guid isPermaLink="false">http://urangatang.lustauffotos.com/?p=38</guid>
				<description><![CDATA[Quick, short post I always had in the queue: Check this out, here some lists of good techniques to get started and to impove your Ruby and Rails code: http://nettuts.com/articles/web-roundups/10-awesome-ruby-on-rails-techniques-to-get-you-started/ http://www.rubyinside.com/19-rails-tricks-most-rails-coders-dont-know-131.html http://www.rubyinside.com/21-ruby-tricks-902.html [Awsm picture taken from DesignShark]]]></description>
								<content:encoded><![CDATA[<p>Quick, short post I always had in the queue:</p>
<p style="text-align: center"><img class="aligncenter" src="http://www.designshak.com/wp-content/uploads/2009/08/bruce_on_rails.jpg" alt="" /></p>
<p>Check this out, here some lists of good techniques to get started and to impove your Ruby and Rails code:</p>
<p>http://nettuts.com/articles/web-roundups/10-awesome-ruby-on-rails-techniques-to-get-you-started/</p>
<p>http://www.rubyinside.com/19-rails-tricks-most-rails-coders-dont-know-131.html</p>
<p>http://www.rubyinside.com/21-ruby-tricks-902.html</p>
<p>[Awsm picture taken from <a href="http://www.designshak.com/blog/ruby-on-rails">DesignShark</a>]</p>
]]></content:encoded>
										</item>
		<item>
		<title>Extending Active Scaffold as_paperclip_bridge to delete &#038; update image/attachment</title>
		<link>http://www.rngtng.com/2009/08/13/extending-active-scaffold-as_paperclip_bridge-to-delete-update-imageattachment/</link>
				<pubDate>Thu, 13 Aug 2009 15:53:35 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[active]]></category>
		<category><![CDATA[attachment]]></category>
		<category><![CDATA[bridge]]></category>
		<category><![CDATA[file]]></category>
		<category><![CDATA[github]]></category>
		<category><![CDATA[on]]></category>
		<category><![CDATA[plugin]]></category>
		<category><![CDATA[rails]]></category>
		<category><![CDATA[Rails & Co.]]></category>
		<category><![CDATA[ror]]></category>
		<category><![CDATA[Scaffold]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=193</guid>
				<description><![CDATA[As you know I&#8217;m quite fond of working with Active Scaffold (AS) for data administration proposes. Quite recently we moved over to the RoR paperclip attachment plugin for file upload handling. I was even more happy to see a Active Scaffold bridge which integrates paperclip smoothly into AS as well. It&#8217;s created by and hosted [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>As you know I&#8217;m quite fond of working with <a href="http://activescaffold.com/" class="broken_link">Active Scaffold (AS)</a> for data administration proposes. Quite recently we moved over to the RoR <a href="http://www.thoughtbot.com/projects/paperclip">paperclip attachment plugin</a> for file upload handling. I was even more happy to see a Active Scaffold bridge which integrates paperclip smoothly into AS as well. It&#8217;s created by and hosted <a href="http://github.com/mnaglik/as_paperclip_bridge/tree/master">here</a> on github.</p>
<p>Unfortunately it didn&#8217;t provide the possibility to delete or update an image once it&#8217;s assigned to an object. Well no problem, another fork of mine, some coding and now it possible. I basically reused to code of the as_file_column_bridge. Check it out here:<br />
<del datetime="2010-01-11T09:46:08+00:00">http://github.com/rngtng/as_paperclip_bridge/tree/master</del></p>
<p><strong>Update:</strong> changes got merged into trunk, check it out:<br />
http://github.com/mnaglik/as_paperclip_bridge/</p>
]]></content:encoded>
										</item>
		<item>
		<title>My first GitHub fork: bounce-email</title>
		<link>http://www.rngtng.com/2009/06/05/my-first-github-fork-bounce-email/</link>
				<pubDate>Fri, 05 Jun 2009 12:40:12 +0000</pubDate>
		<dc:creator><![CDATA[tobi]]></dc:creator>
				<category><![CDATA[Ruby, Rails & Co.]]></category>
		<category><![CDATA[bounce]]></category>
		<category><![CDATA[email]]></category>
		<category><![CDATA[fork]]></category>
		<category><![CDATA[github]]></category>
		<category><![CDATA[patch]]></category>
		<category><![CDATA[Rails & Co.]]></category>
		<category><![CDATA[tmail]]></category>

		<guid isPermaLink="false">http://www.rngtng.com/?p=102</guid>
				<description><![CDATA[Hurray! I finally forked a github project. Yesterday I ran into the bounce-email gem by Agris Ameriks on Rubyforge. It&#8217;s basically a 1:1 port of the PHP Bounce Handler classby Chris Fortune and not very rubyified. Thanks to David Reese, bounce-email is forked on github and I could easily extend it. I rubyfied the class, [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>Hurray! I finally forked a github project. Yesterday I ran into the <a href="http://rubyforge.org/projects/bounce-email/" class="broken_link">bounce-email gem</a> by Agris Ameriks on Rubyforge. It&#8217;s basically a 1:1 port of the <a href="http://www.phpclasses.org/browse/package/2691.html">PHP Bounce Handler class</a>by Chris Fortune and not very rubyified. Thanks to David Reese, <a href="http://github.com/whatcould/bounce-email/tree/master">bounce-email is forked on github </a> and I could easily extend it.</p>
<p>I rubyfied the class, did some code cleanup, added (yet a very simple) way to get the  original message, and gained some performance by paring message only on demand. A testcase was broken as well the Rakefile, both are fixed. See the update here:<br />
<a href="http://github.com/rngtng/bounce-email/tree/master" class="broken_link">http://github.com/rngtng/bounce-email/tree/master</a></p>
]]></content:encoded>
										</item>
	</channel>
</rss>
